##############################################################################
# 📘 Documentation CI (Overview)
# ---------------------------------------------------------------------------
# Purpose:
# - Validate documentation markdown for broken links and minimal structure.
# - Provide a human-friendly summary of changed docs in the GitHub run summary.
# - Reduce docs regressions by catching 404s and missing top-level files early.
#
# Comment strategy:
# - Keep a concise top-of-file overview for maintainers
# - Add short per-step comments inside `steps` to explain 'why'
##############################################################################
name: Documentation CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '*.md'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '*.md'

jobs:
  validate-docs:
    runs-on: ubuntu-latest
    
    steps:
    # 1️⃣ Checkout repository (documentation files)
    # 🔎 Why: operate on the exact commit's docs so link-checks reference correct files
    - name: Checkout code
      uses: actions/checkout@v4
      
    # 2️⃣ Validate Markdown links (link checker)
    # 🔗 Why: detect dead links early. The check uses the project's config file
    # to allow/deny patterns and fine-tune behavior.
    - name: Validate Markdown files
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/workflows/markdown-link-check-config.json'
        
    # 3️⃣ Check documentation structure (presence of high-level docs)
    # 🧭 Why: enforce minimal required files so docs navigation works in consumers
    - name: Check documentation structure
      run: |
        echo "Validating documentation structure..."
        
        # Check if required documentation files exist
        required_files=(
          "docs/README.md"
          "README.md"
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Required file missing: $file"
            exit 1
          else
            echo "✅ Found: $file"
          fi
        done
        
        echo "✅ Documentation structure validation passed!"
        
    # 4️⃣ Generate a short summary for the run (human-friendly)
    # 📋 Why: provide a step summary in the GitHub UI to help reviewers
    - name: Generate documentation summary
      run: |
        echo "📚 Documentation Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "================================" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📁 **Files Changed:**" >> $GITHUB_STEP_SUMMARY
        
        # List changed markdown files (best-effort; falls back to empty when none)
        git diff --name-only HEAD~1 HEAD | grep -E '\.(md|markdown)$' | while read file; do
          echo "- \`$file\`" >> $GITHUB_STEP_SUMMARY
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ℹ️ **Note:** This is a documentation-only update. No deployment was triggered." >> $GITHUB_STEP_SUMMARY

  publish-docs:
    needs: validate-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build API docs (jsdoc/documentation)
        run: |
          # Ensure output directory exists
          rm -rf docs/_site || true
          mkdir -p docs/_site
          npm run docs:api

      - name: Publish generated docs to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_site
          publish_branch: gh-pages
          user_name: docs-bot
          user_email: docs-bot@example.com